server {

  server_name your-proxy.com;

  location / {
    if ( $http_origin ~* (https?://(.+\.)?your-proxy\.com$) ) {
      add_header "Access-Control-Allow-Origin" "$http_origin";
    }
    proxy_pass https://api.vrchat.cloud;
    proxy_set_header User-Agent vrchat_dart_example;
    proxy_redirect https://d348imysud55la.cloudfront.net/ /file/;
  }

  location /file/ {
    if ( $http_origin ~* (https?://(.+\.)?your-proxy\.com$) ) {
      add_header "Access-Control-Allow-Origin" "$http_origin";
    }
    proxy_pass https://d348imysud55la.cloudfront.net/;
    proxy_set_header User-Agent vrchat_dart_example;
  }

  location /websocket/ {
    proxy_pass https://pipeline.vrchat.cloud;
    proxy_set_header User-Agent vrchat_dart_example;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host pipeline.vrchat.cloud;
  }

  # You will need to use Certbot to generate your own SSL certificate
  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/your-proxy.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/your-proxy.com/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
  if ($host = your-proxy.com) {
      return 301 https://$host$request_uri;
  } # managed by Certbot


  listen 80;
  listen [::]:80;

  server_name your-proxy.com;
  return 404; # managed by Certbot
}